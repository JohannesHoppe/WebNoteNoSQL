//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("WebNoteDatabaseModel", "CategoryToNode", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebNoteNoSQL.Models.EntityFramework.Category), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebNoteNoSQL.Models.EntityFramework.Note))]

#endregion

namespace WebNoteNoSQL.Models.EntityFramework
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class WebNote : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new WebNote object using the connection string found in the 'WebNote' section of the application configuration file.
        /// </summary>
        public WebNote() : base("name=WebNote", "WebNote")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WebNote object.
        /// </summary>
        public WebNote(string connectionString) : base(connectionString, "WebNote")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WebNote object.
        /// </summary>
        public WebNote(EntityConnection connection) : base(connection, "WebNote")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Note> Notes
        {
            get
            {
                if ((_Notes == null))
                {
                    _Notes = base.CreateObjectSet<Note>("Notes");
                }
                return _Notes;
            }
        }
        private ObjectSet<Note> _Notes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Notes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotes(Note note)
        {
            base.AddObject("Notes", note);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WebNoteDatabaseModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="color">Initial value of the Color property.</param>
        public static Category CreateCategory(global::System.Int32 categoryId, global::System.String name, global::System.String color)
        {
            Category category = new Category();
            category.CategoryId = categoryId;
            category.Name = name;
            category.Color = color;
            return category;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                if (_CategoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _CategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WebNoteDatabaseModel", "CategoryToNode", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("WebNoteDatabaseModel.CategoryToNode", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("WebNoteDatabaseModel.CategoryToNode", "Note", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WebNoteDatabaseModel", Name="Note")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Note : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Note object.
        /// </summary>
        /// <param name="noteId">Initial value of the NoteId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="added">Initial value of the Added property.</param>
        public static Note CreateNote(global::System.Int32 noteId, global::System.String title, global::System.DateTime added)
        {
            Note note = new Note();
            note.NoteId = noteId;
            note.Title = title;
            note.Added = added;
            return note;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NoteId
        {
            get
            {
                return _NoteId;
            }
            set
            {
                if (_NoteId != value)
                {
                    OnNoteIdChanging(value);
                    ReportPropertyChanging("NoteId");
                    _NoteId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NoteId");
                    OnNoteIdChanged();
                }
            }
        }
        private global::System.Int32 _NoteId;
        partial void OnNoteIdChanging(global::System.Int32 value);
        partial void OnNoteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Added
        {
            get
            {
                return _Added;
            }
            set
            {
                OnAddedChanging(value);
                ReportPropertyChanging("Added");
                _Added = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Added");
                OnAddedChanged();
            }
        }
        private global::System.DateTime _Added;
        partial void OnAddedChanging(global::System.DateTime value);
        partial void OnAddedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WebNoteDatabaseModel", "CategoryToNode", "Category")]
        public EntityCollection<Category> Categories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Category>("WebNoteDatabaseModel.CategoryToNode", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Category>("WebNoteDatabaseModel.CategoryToNode", "Category", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}

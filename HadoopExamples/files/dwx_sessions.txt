Mehrschichten-architektur -- Die Schichtenarchitektur ist eine der häufigst angewendeten Strukturierungsformen bei neuen Anwendungen um Aspekte konzeptionell getrennt in verschiedenen Schichten unterzubringen. Was in der Theorie recht simpel klingt, gestaltet sich in einem Praxisprojekt meist wesentlich schwieriger. Wie strukturiere ich mein Projekt? Welche Aspekte werden in welcher Schicht untergebracht? Wie setze ich ORM-Tools ein? Wie werden Abhängigkeiten aufgelöst? Wie wird das Ganze getestet? Wir schauen uns gemeinsam eine praktische Umsetzung an und klären diese und andere Fragen gemeinsam an einem Praxisbeispiel.
Visual Studio 2012 Secrets -- Der Umfang an Funktionen in Visual Studio ist gewaltig. Mit der neuen Version 2012 gibt es noch mal frischen Wind in der IDE-Welt. Gezeigt werden spannende und wenig bekannte Werkzeuge, Nutzungsmöglichkeiten und Anwendungen. Erleben Sie Visual Studio wie noch nie und werden Sie zum Entwicklerprofi beim Schreiben, Debuggen und Optimieren von Anwendungen - ohne teure Third-Party Erweiterungen. - See more at: http://www.developer-week.de/Programm/Veranstaltung/(event)/11019#sthash.TMouym9x.dpuf
Produktives Eventhandling mit Reactive Extensions -- Asynchrone Programmierung ist der Schwerpunkt des neuen .NET-Frameworks 4.5 und der neuen Versionen von C# und Visual Basic. Die Reactive Extensions (Rx) ergänzen diese neue Funktionalität mit einer neuen, modernen Herangehensweise an Eventhandling, inklusive Unterstützung für LINQ und Lambda-Ausdrücke. In diesem Vortrag wird anhand vieler Beispiele gezeigt, wo Reactive Extensions eine sinnvolle Alternative zum klassischen Eventhandling bieten und wie Reactive Extensions mit der Task Parallel Library (TPL) und async/await Hand in Hand gehen, um ein mächtiges Werkzeug für jeden .NET-Entwickler zu sein.
Software-Industrialisierung -- Die Session führt in Moderne Modell- und Domäne-getriebenen Architekturen sowie industriellen Herstellungsmethoden ein. Es werden auch pragmatische Anwendungsbeispiele dargestellt, die auf Moderne Tools und Zielarchitekturen ausgerichtet sind wie z.B. Mobile Entwicklung, Windows 8, Visual Studio usw.
JavaScript für C#-Entwickler -- Seit Monaten bereiten Sie sich auf Windows 8 und WinRT vor. Nun hat gerade Ihr wichtigster Kunde angerufen, um Ihnen den Auftrag zur Entwicklung einer entsprechenden Anwendung zu erteilen. Ihr anfänglicher Stolz ist jedoch schnell Ernüchterung gewichen, als die Anforderung genannt wurde, dass die Anwendung in JavaScript geschrieben werden müsse ... Diese Sprache haben Sie bislang nämlich vollständig außer Acht gelassen. Was Sie jetzt brauchen, ist ein JavaScript-Crashkurs für C#-Entwickler, der Ihnen auf die Sprünge hilft. Golo Roden stellt Ihnen (fast) alles vor, was Sie über JavaScript wissen müssen, und zeigt - ganz nebenbei - dass JavaScript-Entwicklung nicht bedeutet, steinzeitlich mit vi auf der Konsole arbeiten zu müssen.
HTML5 abwärtskompatibel -- HTML5-Anwendungen abwärtskompatibel gestalten. HTML5 ermöglicht es Entwicklern leistungsfähige Webanwendungen zu schreiben, die einen Vergleich mit Desktop-Anwendungen immer weniger scheuen müssen. Beim Einsatz von HTML5 besteht jedoch die Gefahr, dass man über das Ziel hinausschießt und die Anwendungen wichtigen Zielgruppen vorenthält: Mitarbeiter in (großen) Unternehmen können häufig nur einen Legacy-Browser verwenden, der wesentliche Teile von HTML5 nicht unterstützt. Viele Menschen, besonders aus den Schwellenländern, gehen zum ersten mal mit einem Smartphone online. Dies ist dann aber kein High-End-Produkt wie ein modernes iPhone, sondern ein wesentlich weniger leistungsfähiges Gerät. Obwohl heute viele Screenreader JavaScript beherrschen ist das noch keine Garantie dafür, dass eine Webanwendung auch körperlich eingeschränkten Nutzern zugänglich ist. Jonathan erklärt, wie man eine Moderne Webanwendung entwirft und umsetzt, die allen Zielgruppen gerecht wird und stellt Tools und Frameworks vor die bei dieses Vorhaben unterstützen.
Pixelschubsen oder Frontend-Framework? -- UI-Wildwuchs? Pixel-genaue Design-Spezifikationen? Code-Duplizierung im Frontend? Überall Browser-Hacks? Inkonsistenter Markenauftritt? HTML, das keiner versteht? Diese Zeiten sind vorbei, wenigstens bei AutoScout24. Wir haben ein Framework aufgebaut, das es allen Designern und Entwicklern ermöglicht, schnell neue Seiten im Corporate Design zu bauen. Im Vordergrund stehen dabei Klarheit, Wiederverwendung und die Möglichkeit, das Portal-übergreifende Design an einer zentralen Stelle zu ändern. Konstruktive Zusammenarbeit hat hat dafür gesorgt, dass Aussprüche wie "das sieht ja keiner" von Entwicklern oder "schieb das noch zwei Pixel nach rechts" von Designern der Vergangenheit angehören.
Meteor im Live-Test -- Als einfache Lösung für sonst komplexe Single-Page Web-Apps wird derzeit Meteor gefeiert. Meteor erleichtert, kurz gesagt, das Programmieren von Realtime-Multi-User-Anwendungen – zusammengesetzt aus mehreren Javascripts, die im Browser, wie auch auf dem Server ausgeführt werden. Anstatt ein weiteres Mal von der Effizienz und Kostenersparnis durch das Framework zu schwärmen, soll in dieser Session für Developer praktisch überprüft werden, was Meteor kann: Als Beispiel für das schnelle Erstellen von Web-Anwendungen mit Meteor wird ein Realtime Multi-User Chat live programmiert. Die vielversprechenden Features von Meteor (auf Client- und Serverseite vollständig in JavaScript, transparente und einfache API, Prefetch-Mechanismus, ereignisorientierte Schnittstelle) werden „in Echtzeit“ demonstriert und auf die Probe gestellt.
Flexible Android App Architekturen -- Eine Herausforderung  für die erfolgreiche Android App Entwicklung ist das Thema Flexibilität. Gerade die Unterstützung von mehreren Gerätetypen und Screengrößen wirft dabei Fragestellungen in Bezug auf die Softwarearchitektur auf. Eine passende Architektur kann die Entwicklungsgeschwindigkeit verkürzen und die Codequalität erhöhen. Zudem werden komplexere Szenarien beherrschbar. Als Beispiel dafür dient das Android-typische Zusammenspiel mehrerer Android Komponenten, deren Lebenszyklen in Kombination mit Multithreading. Die Session präsentiert praxisnahe Lösungsvorschläge und zusätzliche Libraries rund um typische Problemstellungen von Android Apps.
Apps besser präsentieren -- Die App ist fertig, der Prototyp oder das Konzept ausgearbeitet - und nun? Wie kann man auch ohne profunde Kenntnisse in Photoshop oder 3D-Programmen hochwertige Marketing-Grafiken der eigenen App produzieren, um Auftraggeber und Konsumenten zu begeistern? Ich stelle verschiedene Tools, automatisierbare Abläufe und Tricks vor, mit denen Entwickler Webseiten und Präsentationen erstellen können, die sich nicht vor den “Großen” verstecken müssen.
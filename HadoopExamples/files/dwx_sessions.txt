Mehrschichten-architektur -- Die Schichtenarchitektur ist eine der haeufigst angewendeten Strukturierungsformen bei neuen Anwendungen um Aspekte konzeptionell getrennt in verschiedenen Schichten unterzubringen. Was in der Theorie recht simpel klingt, gestaltet sich in einem Praxisprojekt meist wesentlich schwieriger. Wie strukturiere ich mein Projekt? Welche Aspekte werden in welcher Schicht untergebracht? Wie setze ich ORM-Tools ein? Wie werden Abhaengigkeiten aufgeloest? Wie wird das Ganze getestet? Wir schauen uns gemeinsam eine praktische Umsetzung an und klaeren diese und andere Fragen gemeinsam an einem Praxisbeispiel.
Visual Studio 2012 Secrets -- Der Umfang an Funktionen in Visual Studio ist gewaltig. Mit der neuen Version 2012 gibt es noch mal frischen Wind in der IDE-Welt. Gezeigt werden spannende und wenig bekannte Werkzeuge, Nutzungsmoeglichkeiten und Anwendungen. Erleben Sie Visual Studio wie noch nie und werden Sie zum Entwicklerprofi beim Schreiben, Debuggen und Optimieren von Anwendungen - ohne teure Third-Party Erweiterungen.
Produktives Eventhandling mit Reactive Extensions -- Asynchrone Programmierung ist der Schwerpunkt des neuen dotNET-Frameworks 4.5 und der neuen Versionen von CSharp und Visual Basic. Die Reactive Extensions (Rx) ergaenzen diese neue Funktionalitaet mit einer neuen, modernen Herangehensweise an Eventhandling, inklusive Unterstuetzung fuer LINQ und Lambda-Ausdruecke. In diesem Vortrag wird anhand vieler Beispiele gezeigt, wo Reactive Extensions eine sinnvolle Alternative zum klassischen Eventhandling bieten und wie Reactive Extensions mit der Task Parallel Library (TPL) und async/await Hand in Hand gehen, um ein maechtiges Werkzeug fuer jeden dotNET-Entwickler zu sein.
Software-Industrialisierung -- Die Session fuehrt in Moderne Modell- und Domaene-getriebenen Architekturen sowie industriellen Herstellungsmethoden ein. Es werden auch pragmatische Anwendungsbeispiele dargestellt, die auf Moderne Tools und Zielarchitekturen ausgerichtet sind wie z.B. Mobile Entwicklung, Windows 8, Visual Studio usw.
JavaScript fuer CSharp-Entwickler -- Seit Monaten bereiten Sie sich auf Windows 8 und WinRT vor. Nun hat gerade Ihr wichtigster Kunde angerufen, um Ihnen den Auftrag zur Entwicklung einer entsprechenden Anwendung zu erteilen. Ihr anfaenglicher Stolz ist jedoch schnell Ernuechterung gewichen, als die Anforderung genannt wurde, dass die Anwendung in JavaScript geschrieben werden muesse ... Diese Sprache haben Sie bislang naemlich vollstaendig ausser Acht gelassen. Was Sie jetzt brauchen, ist ein JavaScript-Crashkurs fuer CSharp-Entwickler, der Ihnen auf die Spruenge hilft. Golo Roden stellt Ihnen (fast) alles vor, was Sie ueber JavaScript wissen muessen, und zeigt - ganz nebenbei - dass JavaScript-Entwicklung nicht bedeutet, steinzeitlich mit vi auf der Konsole arbeiten zu muessen.
HTML5 abwaertskompatibel -- HTML5-Anwendungen abwaertskompatibel gestalten. HTML5 ermoeglicht es Entwicklern leistungsfaehige Webanwendungen zu schreiben, die einen Vergleich mit Desktop-Anwendungen immer weniger scheuen muessen. Beim Einsatz von HTML5 besteht jedoch die Gefahr, dass man ueber das Ziel hinausschiesst und die Anwendungen wichtigen Zielgruppen vorenthaelt: Mitarbeiter in (grossen) Unternehmen koennen haeufig nur einen Legacy-Browser verwenden, der wesentliche Teile von HTML5 nicht unterstuetzt. Viele Menschen, besonders aus den Schwellenlaendern, gehen zum ersten mal mit einem Smartphone online. Dies ist dann aber kein High-End-Produkt wie ein modernes iPhone, sondern ein wesentlich weniger leistungsfaehiges Geraet. Obwohl heute viele Screenreader JavaScript beherrschen ist das noch keine Garantie dafuer, dass eine Webanwendung auch koerperlich eingeschraenkten Nutzern zugaenglich ist. Jonathan erklaert, wie man eine Moderne Webanwendung entwirft und umsetzt, die allen Zielgruppen gerecht wird und stellt Tools und Frameworks vor die bei dieses Vorhaben unterstuetzen.
Pixelschubsen oder Frontend-Framework? -- UI-Wildwuchs? Pixel-genaue Design-Spezifikationen? Code-Duplizierung im Frontend? Ueberall Browser-Hacks? Inkonsistenter Markenauftritt? HTML, das keiner versteht? Diese Zeiten sind vorbei, wenigstens bei AutoScout24. Wir haben ein Framework aufgebaut, das es allen Designern und Entwicklern ermoeglicht, schnell neue Seiten im Corporate Design zu bauen. Im Vordergrund stehen dabei Klarheit, Wiederverwendung und die Moeglichkeit, das Portal-uebergreifende Design an einer zentralen Stelle zu aendern. Konstruktive Zusammenarbeit hat hat dafuer gesorgt, dass Aussprueche wie "das sieht ja keiner" von Entwicklern oder "schieb das noch zwei Pixel nach rechts" von Designern der Vergangenheit angehoeren.
Meteor im Live-Test -- Als einfache Loesung fuer sonst komplexe Single-Page Web-Apps wird derzeit Meteor gefeiert. Meteor erleichtert, kurz gesagt, das Programmieren von Realtime-Multi-User-Anwendungen – zusammengesetzt aus mehreren Javascripts, die im Browser, wie auch auf dem Server ausgefuehrt werden. Anstatt ein weiteres Mal von der Effizienz und Kostenersparnis durch das Framework zu schwaermen, soll in dieser Session fuer Developer praktisch ueberprueft werden, was Meteor kann: Als Beispiel fuer das schnelle Erstellen von Web-Anwendungen mit Meteor wird ein Realtime Multi-User Chat live programmiert. Die vielversprechenden Features von Meteor (auf Client- und Serverseite vollstaendig in JavaScript, transparente und einfache API, Prefetch-Mechanismus, ereignisorientierte Schnittstelle) werden „in Echtzeit“ demonstriert und auf die Probe gestellt.
Flexible Android App Architekturen -- Eine Herausforderung  fuer die erfolgreiche Android App Entwicklung ist das Thema Flexibilitaet. Gerade die Unterstuetzung von mehreren Geraetetypen und Screengroessen wirft dabei Fragestellungen in Bezug auf die Softwarearchitektur auf. Eine passende Architektur kann die Entwicklungsgeschwindigkeit verkuerzen und die Codequalitaet erhoehen. Zudem werden komplexere Szenarien beherrschbar. Als Beispiel dafuer dient das Android-typische Zusammenspiel mehrerer Android Komponenten, deren Lebenszyklen in Kombination mit Multithreading. Die Session praesentiert praxisnahe Loesungsvorschlaege und zusaetzliche Libraries rund um typische Problemstellungen von Android Apps.
Apps besser praesentieren -- Die App ist fertig, der Prototyp oder das Konzept ausgearbeitet - und nun? Wie kann man auch ohne profunde Kenntnisse in Photoshop oder 3D-Programmen hochwertige Marketing-Grafiken der eigenen App produzieren, um Auftraggeber und Konsumenten zu begeistern? Ich stelle verschiedene Tools, automatisierbare Ablaeufe und Tricks vor, mit denen Entwickler Webseiten und Praesentationen erstellen koennen, die sich nicht vor den “Grossen” verstecken muessen.

